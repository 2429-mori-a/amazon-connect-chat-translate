export class ChatSession {
    constructor(controller: any);
    controller: any;
    onMessage(callback: any): void;
    onTyping(callback: any): void;
    onReadReceipt(callback: any): void;
    onDeliveredReceipt(callback: any): void;
    onConnectionBroken(callback: any): void;
    onConnectionEstablished(callback: any): void;
    onEnded(callback: any): void;
    onParticipantIdle(callback: any): void;
    onParticipantReturned(callback: any): void;
    onAutoDisconnection(callback: any): void;
    onConnectionLost(callback: any): void;
    onDeepHeartbeatSuccess(callback: any): void;
    onDeepHeartbeatFailure(callback: any): void;
    sendMessage(args: any): any;
    sendAttachment(args: any): any;
    downloadAttachment(args: any): any;
    connect(args: any): any;
    sendEvent(args: any): any;
    getTranscript(args: any): any;
    getChatDetails(): any;
    describeView(args: any): any;
}
export const CHAT_SESSION_FACTORY: PersistentConnectionAndChatServiceSessionFactory;
declare class PersistentConnectionAndChatServiceSessionFactory extends ChatSessionFactory {
    argsValidator: ChatServiceArgsValidator;
    createChatSession(sessionType: any, chatDetails: any, options: any, websocketManager: any): AgentChatSession | CustomerChatSession;
    _createChatController(sessionType: any, chatDetailsInput: any, options: any, websocketManager: any): ChatController;
}
export namespace ChatSessionObject {
    export { ChatSessionConstructor as create };
    export { setGlobalConfig };
    export { LogLevel };
    export { Logger };
    export { SESSION_TYPES as SessionTypes };
    export { csmService };
    export { setFeatureFlag };
}
declare class ChatSessionFactory {
    createAgentChatController(chatDetails: any, participantType: any): void;
    createCustomerChatController(chatDetails: any, participantType: any): void;
}
import { ChatServiceArgsValidator } from "./chatArgsValidator";
declare class AgentChatSession extends ChatSession {
    cleanUpOnParticipantDisconnect(): any;
}
declare class CustomerChatSession extends ChatSession {
    disconnectParticipant(): any;
}
import { ChatController } from "./chatController";
declare function ChatSessionConstructor(args: any): AgentChatSession | CustomerChatSession;
declare function setGlobalConfig(config: any): void;
import { LogLevel } from "../log";
import { Logger } from "../log";
import { SESSION_TYPES } from "../constants";
import { csmService } from "../service/csmService";
declare function setFeatureFlag(feature: any): void;
export {};
