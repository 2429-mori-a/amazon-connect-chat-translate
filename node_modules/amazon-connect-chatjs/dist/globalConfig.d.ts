export const GlobalConfig: GlobalConfigImpl;
declare class GlobalConfigImpl {
    stage: string;
    region: string;
    cell: string;
    reconnect: boolean;
    logger: {
        options: any;
        debug(...args: any[]): any;
        info(...args: any[]): any;
        warn(...args: any[]): any;
        error(...args: any[]): any;
        advancedLog(...args: any[]): any;
        _shouldLog(level: any): boolean;
        _writeToClientLogger(level: any, logStatement: any): any;
        _log(level: any, args: any): any;
        _convertToSingleStatement(args: any): string;
        _convertToString(arg: any): any;
    };
    features: never[];
    messageReceiptThrottleTime: number;
    featureChangeListeners: any[];
    update(configInput: any): void;
    endpointOverride: any;
    updateStageRegionCell(config: any): void;
    getCell(): string;
    updateThrottleTime(throttleTime: any): void;
    getMessageReceiptsThrottleTime(): number;
    getStage(): string;
    getRegion(): string;
    getEndpointOverride(): any;
    removeFeatureFlag(feature: any): void;
    setFeatureFlag(feature: any): void;
    _registerFeatureChangeListener(feature: any, callback: any): void;
    _cleanFeatureChangeListener(feature: any): void;
    isFeatureEnabled(feature: any, callback: any): any;
}
export {};
