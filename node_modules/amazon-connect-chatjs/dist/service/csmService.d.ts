export const DIMENSION_CATEGORY: "Category";
export const csmService: CsmService;
declare class CsmService {
    widgetType: string;
    logger: {
        options: any;
        debug(...args: any[]): any;
        info(...args: any[]): any;
        warn(...args: any[]): any;
        error(...args: any[]): any;
        advancedLog(...args: any[]): any;
        _shouldLog(level: any): boolean;
        _writeToClientLogger(level: any, logStatement: any): any;
        _log(level: any, args: any): any;
        _convertToSingleStatement(args: any): string;
        _convertToString(arg: any): any;
    };
    csmInitialized: boolean;
    metricsToBePublished: any[];
    agentMetricToBePublished: any[];
    MAX_RETRY: number;
    loadCsmScriptAndExecute(): void;
    initializeCSM(): void;
    updateCsmConfig(csmConfig: any): void;
    _hasCSMFailedToImport(): boolean;
    getDefaultDimensions(): {
        name: string;
        value: string;
    }[];
    addMetric(metric: any): void;
    setDimensions(metric: any, dimensions: any): void;
    addLatencyMetric(method: any, timeDifference: any, category: any, otherDimensions?: any[]): void;
    addLatencyMetricWithStartTime(method: any, startTime: any, category: any, otherDimensions?: any[]): void;
    addCountAndErrorMetric(method: any, category: any, error: any, otherDimensions?: any[]): void;
    addCountMetric(method: any, category: any, otherDimensions?: any[]): void;
    addAgentCountMetric(metricName: any, count: any): void;
}
export {};
